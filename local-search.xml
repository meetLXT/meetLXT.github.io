<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Morgan Stanley Technology Summer Analyst Intern复盘</title>
    <link href="/2022/03/15/Morgan-Stanley-Technology-Summer-Analyst-Intern%E5%A4%8D%E7%9B%98/"/>
    <url>/2022/03/15/Morgan-Stanley-Technology-Summer-Analyst-Intern%E5%A4%8D%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为一些机缘巧合，这几天以一个没有准备好的情况下被赶鸭子上架进行了一次Morgan Stanley（大摩）的笔面经历，简单复盘下，总结一下流程和记录下自己的一些感悟。</p><span id="more"></span><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p>可能因为这个是提前批次，所以流程有所简化，轮次相对较少，大概是code test -&gt; phone interview -&gt; online interview -&gt; offer。注意：interview都是全英文，30分钟左右。</p><p>0307 参加宣讲会。有一说一摩根是真的有钱，妇女节来临之际，给每个来宣讲会的女生送了伴手礼（一束花+一个欧舒丹护手霜），且每张桌子上放了帆布包或文具袋；</p><p>0308通过邮箱收到含code test链接、账户及密码的邮件，要求0312中午前完成（code test内容下面会详细说明）；</p><p>0311 完成code test，结果是2道AC。</p><p>0313 收到通知进入下一轮电面（phone interview）的邮件，邮件内说明会在电面前邮件通知你时间；</p><p>0314 下午1点收到邮件，约0315 10:00-10:30时间电面，非常人性化地征求了意见；</p><p>0315 约定的时间进行了电面。</p><h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><p>笔试平台为hackerrank，要求40min完成2道题，不限语言，难度大概是中等题，但是想要规定时间内都AC具有一定的难度。不过让我比较意外的是这次所有人的code test题目甚至都是一样的，原本以为是不打算笔试刷人的意思，但是后来得知只有都AC的才能进入下一轮……</p><p>这次的题目为：</p><blockquote><p>题目一：给定target字符串，要让与target字符转等长的全零字符串翻转成target，求解最小翻转次数，其中翻转规则如下：</p><p>将给定位置以其右边的数字全部取反</p><p>target: 0100</p><p>全零字符串: 0000</p><p>第一次从3的位置翻转：0011</p><p>第二次从1的位置翻转：0100</p><p>至少需要两次</p><p>从最左边开始搜索，找到有几次变化，答案就是几</p><p>题目二：</p><p>给定两个字符串数组，例如A：[“tea”, “boy”, “aaa”]，B：[“aet”, “aoy”, “aa”]，要将A中的每一个字符串转化为B中，如果可以就是转换次数，例”tea”变成“aet”只需要0次，”boy”变成”aoy”,需要1次， “aaa”变成”aa”不能则是-1，答案是[0,1,-1]</p></blockquote><h1 id="电面"><a href="#电面" class="headerlink" title="电面"></a>电面</h1><p>电面前一天晚上，我在网上搜索了一下面经，发现摩根问的问题有一些相似的情况，甚至可以形成一个题库。（也很合理，毕竟面试你的人技术基础和英语很难兼得）。我主要参考的是这个博客整理的题库：</p><p><a href="https://blog.csdn.net/zhangzhuoyang/article/details/72823197">Morgan题库</a></p><p>并结合其他面经，我整理了一套自己的题库，大约35个问题Q&amp;A，形成了一个word文档，等过两天我也会整理了上传。</p><p>非常准时10点拨来，原本以为会是直接上来就说英文，发现对面的interviewer先是中文开场，然后问是否可以开始面试。然后英文介绍了一下主要面试流程，他先自己进行了brief self- introduction。然后让我进行3 min self- introduction。我主要说了一些自己的项目经历科研成果，但是他告诉我他今天不会详细问我自己的研究内容，主要是一些standard questions。</p><p>首先问了我Why you choose Morgan?</p><p>我就先夸了夸摩根，然后从一些soft skills的角度说了下原因， 并说自己上周听了宣讲会，宣讲会中提到的比如kind mentor, the balanced gender ratio and the work-life balance之类的很吸引我（表现自己有认真听宣讲会）。然后就宣讲会他也问了我一个问题。</p><p>接着是一些关于技术的问题，主要是以下内容：</p><ul><li>Stack overflow</li><li>hash table &amp; hash map</li><li>memory leak/leakage 和cpp 和java在这方面分别如何预防该问题</li><li>Garbage collection 和cpp 和java在这方面的区别</li><li>transaction 和一些深入的问题（我因为没太听懂他的意思，就猜测一个问题的答案为deadlock，但是看他的反应应该不是，于是他根据deadlock深入问我下面的问题。）</li><li>deadlock是什么&amp;怎么预防</li><li>Sql injection</li></ul><p>其中大部分在我原本准备的范围内，但是会深入问，如果对该内容了解不够就会回答不上来。有的内容因为我了解并不够，所以我也不敢直接照着说答案，怕被质疑觉得作弊的可能性。所以还是需要well prepared才行。</p><p>技术面差不多结束，是一个soft question：describe a time you make a tough decision</p><p>但由于我对外企的套路不够熟悉，且没准备过这个问题，我当时有点懵。一时想不起来有什么可以分享的自己做过什么艰难的决定……所以说的有点磕磕绊绊。</p><p>最后是让我反问，我原本是问了英文，但是interviewer说可以直接中文问他（大概是他也不想英文回答吧）。通过反问了解到：1）面试官并不确定你何时可以接到是否能进入下一轮的通知，要看hr。2）外企很看重技术基础。3）Morgan不同部门不同组情况不同，不过整体上不算stressed。</p><h2 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h2><p>其实于我而言结果并不重要，我只是希望可以增加一次人生经历，某种程度上我甚至很害怕进入下一轮。但是今天的电面复盘让我有一些反思。</p><ul><li>外企相比国内互联网大厂，可能对你本身的项目情况并不看重，也不会问很多很难的八股文，<strong>更看重的是你对计算机基础技术的掌握情况（</strong>也就是本保研er没准备过的408内容）。<strong>外企也很看重算法</strong>，可能没有国内互联网大厂的难度高，但是从只有都AC了才给过也能看出对算法的要求。此外，对英语能力比较看重。Morgan这次的面试总体还是比较温柔的风格，不会过分为难你，点到即止。可能外企的风格都是这样吧，不像国内互联网大厂喜欢搞压力面。原本我觉得30分钟全英文面很难，但是后来发现其实很多时间会被你浪费在思考问题、思考如何表达和一些无意义“嗯啊呃”以及“I beg you pardon”中。30分钟很快就过去了。所以如果有朋友真的想去外企，还是尽可能让口语更加流利一些。（不过即便是中文面试，也是<strong>尽量避免这些无意义的水词</strong>比较好）</li><li>因为害怕被质疑作弊，本着希望对方认为自己诚信的原则，所以有的自己其实准备了但不懂的问题并没有展开去说，事后是后悔的，因为如果说了的话对方至少会觉得你是好好准备了的，如果深入的部分不会到时候再说自己不知道。毕竟按照现在的情况，很多人其实都有一套作弊机制，那如果你想要表现的不作弊和坦诚，很可能就比不过别人……（这就是那种不良性的内卷吧……）</li><li><strong>心态真的很重要</strong>，本科的时候由于答辩经验丰富，我完全不害怕面试。（当然也有保研面试中，一般规律是如果有项目和科研情况会只问这些而不问基础专业知识，所以我当时只需要准备好我的项目内容即可的原因。）但是近两年很少经历答辩和面试，又是针对我自己准备不够充分且不够擅长的领域，所以即便我并不看重此次面试的结果，但是不可避免地我还是非常紧张，前一天晚上睡眠质量很差。之后有机会还是可以多尝试面试答辩等场合，磨练心态，尤其在自己非常想要争取的事情上，一定要提前多磨练自己！</li><li>最后的感受就是<strong>机会永远给有准备的人</strong>，比如针对此次Morgan的经历，不论是宣讲会当天如果携带简历会skip一些流程（我当时猜到会这样，但是我因为意愿不高所以并没有做这个准备），还是多看面经/平时把408基础夯实/准备好八股文，不论是怎样的面试都不会太慌。换到其他方面也一样。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>实习面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>latex进阶记录</title>
    <link href="/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>也算是使用了四年latex，但一直停留于修改模板的基础上。每次需要解决问题时都是临时去网上搜相关教程，大部分都用完即忘。因此想现在开始每次记录整理自己遇到的问题，以后再遇到也方便参考。</p><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="题外话：关于画流程图的一个小安利"><a href="#题外话：关于画流程图的一个小安利" class="headerlink" title="题外话：关于画流程图的一个小安利"></a>题外话：关于画流程图的一个小安利</h2><p><a href="https://www.processon.com/">processon</a>这个网站主要用于在线作图，推荐的理由是已经支持用latex形式输入文字。相比visio不支持latex，且对于公式、复杂符号的不友好，简单的图形可以借助processon。</p><p>不过processon也有缺点，主要表现为latex输入的字符导出后可能比普通文字模糊一些。（也可能是我不是尊贵的VIP吧）</p><h2 id="多行公式缩放"><a href="#多行公式缩放" class="headerlink" title="多行公式缩放"></a>多行公式缩放</h2><p>有时会遇到公式太长的情况，需要对公式进行缩放</p><h3 id="方法一：-resizebox"><a href="#方法一：-resizebox" class="headerlink" title="方法一：\resizebox"></a>方法一：\resizebox</h3><p>对于公式、表格等内容，我们可以使用 <code>graphicx</code> 提供的 <code>\resizebox</code> 命令来处理。</p><p>一个例子：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br><span class="hljs-keyword">\resizebox</span>&#123;.9<span class="hljs-keyword">\hsize</span>&#125;&#123;!&#125;&#123;<span class="hljs-built_in">$</span>content<span class="hljs-built_in">$</span>&#125;<span class="hljs-comment">%可以根据需要修改&quot;.9\hsize&quot;</span><br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p>注意：填写公式的那边一定要用“$ $”内联公式的方式，不可用其他。另外，直接这样用可能会有公式的编号，如果不需要的话，要在end代码前加上“\nonumber”。</p><p>缺点：只能一行代码。若用在多行上需要反复多次，且行距太大。</p><h3 id="方法2-缩小公式左右或上下的空隙宽度"><a href="#方法2-缩小公式左右或上下的空隙宽度" class="headerlink" title="方法2: 缩小公式左右或上下的空隙宽度"></a>方法2: 缩小公式左右或上下的空隙宽度</h3><p>缩小公式左右宽度：这个适合于只超出页面一点点的情况。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;equation*&#125;<br>   <span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>1,(n<span class="hljs-built_in">_</span>1-n<span class="hljs-built_in">_</span>2+1)<span class="hljs-keyword">\cdot</span> 2<span class="hljs-built_in">^</span>1+(n<span class="hljs-built_in">_</span>2-n<span class="hljs-built_in">_</span>3+1)<span class="hljs-keyword">\cdot</span> 2<span class="hljs-built_in">^</span>0+p<span class="hljs-keyword">\cdot</span> 2<span class="hljs-built_in">^</span>0&#125;=<span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>1,2n<span class="hljs-built_in">_</span>1-n<span class="hljs-built_in">_</span>2-n<span class="hljs-built_in">_</span>3+p+3&#125;<br><span class="hljs-keyword">\end</span>&#123;equation*&#125;<br><span class="hljs-keyword">\begin</span>&#123;equation*&#125;<br>  <span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>1,(n<span class="hljs-built_in">_</span>1<span class="hljs-keyword">\!</span>-<span class="hljs-keyword">\!</span>n<span class="hljs-built_in">_</span>2<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>1)<span class="hljs-keyword">\!</span><span class="hljs-keyword">\cdot</span><span class="hljs-keyword">\!</span>2<span class="hljs-built_in">^</span>1<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>(n<span class="hljs-built_in">_</span>2<span class="hljs-keyword">\!</span>-<span class="hljs-keyword">\!</span>n<span class="hljs-built_in">_</span>3<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>1)<span class="hljs-keyword">\!</span><span class="hljs-keyword">\cdot</span><span class="hljs-keyword">\!</span>2<span class="hljs-built_in">^</span>0<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>p<span class="hljs-keyword">\!</span><span class="hljs-keyword">\cdot</span><span class="hljs-keyword">\!</span>2<span class="hljs-built_in">^</span>0&#125;    =<span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>1,2n<span class="hljs-built_in">_</span>1<span class="hljs-keyword">\!</span>-<span class="hljs-keyword">\!</span>n<span class="hljs-built_in">_</span>2<span class="hljs-keyword">\!</span>-<span class="hljs-keyword">\!</span>n<span class="hljs-built_in">_</span>3<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>p<span class="hljs-keyword">\!</span>+<span class="hljs-keyword">\!</span>3&#125;<span class="hljs-keyword">\label</span>&#123;eq:4&#125;.<br><span class="hljs-keyword">\end</span>&#123;equation*&#125;<br></code></pre></td></tr></table></figure><p>生成的排版为：</p><p><img src="/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/image-20210524181747729.png" alt="image-20210524181747729"></p><p>注意：可以使用<code>\quad</code>，<code>\qquad</code>，<code>,</code>，<code>:</code>，<code>;</code>，<code>!</code>等符号。</p><p>前两个间隔较大，后三个较小，最后一个是负距离，也就是我们上面呈现的这样，可以用于缩小左右宽度。</p><hr><p>缩小公式上下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br><span class="hljs-keyword">\setlength</span><span class="hljs-keyword">\abovedisplayskip</span>&#123;3pt&#125;<span class="hljs-comment">%shrink space</span><br><span class="hljs-keyword">\setlength</span><span class="hljs-keyword">\belowdisplayskip</span>&#123;3pt&#125;<br><span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>3,n<span class="hljs-built_in">_</span>2,n<span class="hljs-built_in">_</span>1,p&#125;<span class="hljs-keyword">\label</span>&#123;eq:1&#125;,<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/424685-20190505164029498-565971424.jpg" alt="img"></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;equation&#125;<br><span class="hljs-keyword">\Ket</span>&#123;n<span class="hljs-built_in">_</span>3,n<span class="hljs-built_in">_</span>2,n<span class="hljs-built_in">_</span>1,p&#125;<span class="hljs-keyword">\label</span>&#123;eq:1&#125;,<br><span class="hljs-keyword">\end</span>&#123;equation&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/424685-20190505164053611-1722932847.jpg" alt="img"></p><p>注意：<code>\setlength\abovedisplayskip&#123;3pt&#125;</code>指令在很多时候都可以用。</p><p>IEEE的格式默认行距似乎是3pt，所以可以按自己需求设置参数。</p><h3 id="方法3-定义新环境"><a href="#方法3-定义新环境" class="headerlink" title="方法3: 定义新环境"></a>方法3: 定义新环境</h3><p>在cls或tex文件里定义新环境（注意：一定要在<code>\begin&#123;document&#125;</code>之前）</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\newenvironment</span>&#123;sequation&#125;&#123;<span class="hljs-keyword">\small</span><span class="hljs-keyword">\begin</span>&#123;equation&#125;&#125;&#123;<span class="hljs-keyword">\end</span>&#123;equation&#125;&#125;<br><span class="hljs-keyword">\newenvironment</span>&#123;tequation&#125;&#123;<span class="hljs-keyword">\tiny</span><span class="hljs-keyword">\begin</span>&#123;equation&#125;&#125;&#123;<span class="hljs-keyword">\end</span>&#123;equation&#125;&#125;<br></code></pre></td></tr></table></figure><p>而后在正文就可以用这个定义的新环境。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;tequation&#125;<br>A <span class="hljs-keyword">\times</span> B = C<br><span class="hljs-keyword">\end</span>&#123;tequation&#125;<br></code></pre></td></tr></table></figure><p>注意：但是我用这个方法后，TexStudio报错，显示缺少一些字体。网上有人给出的解决方案是改变编译方式，添加或替换为“pdfLatex”。但是我这么操作后报了新的错误，有点麻烦。使用overleaf可以正常编译。</p><h3 id="方法4-最简单易操作的方法"><a href="#方法4-最简单易操作的方法" class="headerlink" title="方法4: 最简单易操作的方法"></a>方法4: 最简单易操作的方法</h3><p>在公式外加上<code>\begin&#123;small&#125;</code>和<code>\end&#123;small&#125;</code></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;small&#125; <br><span class="hljs-keyword">\begin</span>&#123;equation&#125; <br>content<br><span class="hljs-keyword">\end</span>&#123;equation&#125; <br><span class="hljs-keyword">\end</span>&#123;small&#125;<br></code></pre></td></tr></table></figure><p>当然，也可以用\tiny和其他字体，直接替换small即可。</p><p><img src="/2021/05/24/latex%E8%BF%9B%E9%98%B6%E8%AE%B0%E5%BD%95/image-20210524183038189.png" alt="image-20210524183038189"></p><p>如果要写多行公式，可以用<code>\begin&#123;split&#125;</code>和<code>\end&#123;split&#125;</code>，或者cases，array。</p><p>公式间用<code>\\</code>换行。若想要公式对齐则在想要对齐的地方前面加上<code>&amp;</code>。</p><h3 id="方法5-公式整体左移右移。"><a href="#方法5-公式整体左移右移。" class="headerlink" title="方法5: 公式整体左移右移。"></a>方法5: 公式整体左移右移。</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\hspace</span>&#123;-2mm&#125;<span class="hljs-comment">%&#123;&#125;里面负数为左移，正为右移</span><br></code></pre></td></tr></table></figure><p>另外，如果想要调整公式间距，公式中也可以用这个。</p><h2 id="两张图片并列排放"><a href="#两张图片并列排放" class="headerlink" title="两张图片并列排放"></a>两张图片并列排放</h2><h3 id="单栏"><a href="#单栏" class="headerlink" title="单栏"></a>单栏</h3><p>在latex中，对于双栏格式的排版，插入一栏图片时，使用的是<code>\begin&#123;figure&#125;……\end&#123;figure&#125;</code></p><p>可复制的代码如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;figure&#125;[!htbp]<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\subfigure</span>[子图片1标题]&#123;<span class="hljs-keyword">\label</span>&#123;fig1&#125;<span class="hljs-keyword">\includegraphics</span>[width=0.48<span class="hljs-keyword">\linewidth</span>]&#123;图片位置&#125;&#125;<br><span class="hljs-keyword">\subfigure</span>[子图片2标题]&#123;<span class="hljs-keyword">\label</span>&#123;fig2&#125;<span class="hljs-keyword">\includegraphics</span>[width=0.48<span class="hljs-keyword">\linewidth</span>]&#123;图片位置&#125;&#125;<br><span class="hljs-keyword">\caption</span>&#123;整张图片的标题&#125;<br><span class="hljs-keyword">\label</span>&#123;fig3&#125;<br><span class="hljs-keyword">\end</span>&#123;figure&#125;<br></code></pre></td></tr></table></figure><h3 id="跨双栏"><a href="#跨双栏" class="headerlink" title="跨双栏"></a>跨双栏</h3><p>插入双栏图片时需在figure的上标中加入符号“<em>”，具体为`\begin{figure</em>}……\end{figure*}`</p><p>可复制的代码如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-keyword">\begin</span>&#123;figure*&#125;[!htbp]<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\subfigure</span>[子图片1标题]&#123;<span class="hljs-keyword">\label</span>&#123;fig1&#125;<span class="hljs-keyword">\includegraphics</span>[width=0.48<span class="hljs-keyword">\linewidth</span>]&#123;图片位置&#125;&#125;<br><span class="hljs-keyword">\subfigure</span>[子图片2标题]&#123;<span class="hljs-keyword">\label</span>&#123;fig2&#125;<span class="hljs-keyword">\includegraphics</span>[width=0.48<span class="hljs-keyword">\linewidth</span>]&#123;图片位置&#125;&#125;<br><span class="hljs-keyword">\caption</span>&#123;整张图片的标题&#125;<br><span class="hljs-keyword">\label</span>&#123;fig3&#125;<br><span class="hljs-keyword">\end</span>&#123;figure*&#125;<br></code></pre></td></tr></table></figure><h2 id="让创建表格变得更简单"><a href="#让创建表格变得更简单" class="headerlink" title="让创建表格变得更简单"></a>让创建表格变得更简单</h2><p>可以利用一个网站创建表格。网址：<a href="https://www.tablesgenerator.com/">https://www.tablesgenerator.com/</a></p><p>以前手动输入时经常会因为漏了一个&amp;符号，或调整格式而折腾半天，有了这个网站可以使创建表格的操作变得更简单舒适～</p><p>这个网站同时也支持直接上传CSV文件生成表格。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美化fulid主题</title>
    <link href="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/"/>
    <url>/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在不改动源文件的前提下，通过修改css或js文件，美化修改fluid主题的博客！</p><p>根据我的个人审美，我主要进行修改的部分是动态彩条，鼠标、看板娘、头部打字机颜色效果渐变、滚动条颜色。</p><p>这篇文章有参考一个csdn的博客：<a href="https://blog.csdn.net/weixin_43471926/article/details/109798811">参考源</a></p><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>打开fliud的config.yml文件，在里面找到custom_css和custom_js的位置，分别在两者的下面进行引入。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">custom_js:<br>  - <span class="hljs-regexp">/js/</span>diy/timeDate.js<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.js  <span class="hljs-comment">#/APlayer#/APlayer依赖</span><br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/m</span>etowolf<span class="hljs-regexp">/Metingjs@1.2/</span>dist<span class="hljs-regexp">/Meting.min.js  #/</span>APlayer依赖<br><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br>custom_css:<br>  - <span class="hljs-regexp">/css/</span>diy/shubiao.css <span class="hljs-comment">#鼠标指针</span><br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.css   <span class="hljs-comment">#/APlayer依赖</span><br></code></pre></td></tr></table></figure><h2 id="js类"><a href="#js类" class="headerlink" title="js类"></a>js类</h2><h3 id="动态彩条"><a href="#动态彩条" class="headerlink" title="动态彩条"></a>动态彩条</h3><p>这个效果据说是next主题自带的。</p><p><img src="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/image-20210423225925242.png" alt="效果图"></p><p>复制在上面说到的custom_js的下面：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>caidai.js <span class="hljs-comment"># 动态彩带</span><br></code></pre></td></tr></table></figure><h3 id="静态彩条，点击改变形状"><a href="#静态彩条，点击改变形状" class="headerlink" title="静态彩条，点击改变形状"></a>静态彩条，点击改变形状</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>jingtaisidai.js <span class="hljs-comment"># 静态彩带</span><br></code></pre></td></tr></table></figure><h3 id="动态黑色线条"><a href="#动态黑色线条" class="headerlink" title="动态黑色线条"></a>动态黑色线条</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/js/</span>xiantiao.js <span class="hljs-comment"># 动态黑色线条</span><br></code></pre></td></tr></table></figure><h2 id="css类"><a href="#css类" class="headerlink" title="css类"></a>css类</h2><h3 id="头部打字机颜色效果渐变"><a href="#头部打字机颜色效果渐变" class="headerlink" title="头部打字机颜色效果渐变"></a>头部打字机颜色效果渐变</h3><p>我当初选择fluid主题的一个原因就是很喜欢这个头部打印机效果，那么现在还可以让这个头部打印机效果更好看！</p><p><img src="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/image-20210423230445369.png" alt="效果图"></p><p>在上面说的custom_css下面添加：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/</span>toubudaziji.css <span class="hljs-comment"># 头部打字机颜色效果渐变</span><br></code></pre></td></tr></table></figure><p>当然，如果你不想要渐变的话：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/</span>daziyanse.css<span class="hljs-comment"># 头部打字机颜色</span><br></code></pre></td></tr></table></figure><h3 id="滚动条颜色"><a href="#滚动条颜色" class="headerlink" title="滚动条颜色"></a>滚动条颜色</h3><p><img src="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/image-20210423230652438.png" alt="效果图"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/gu</span>ndongtiao.css<span class="hljs-comment"># 滚动条颜色</span><br></code></pre></td></tr></table></figure><h3 id="鼠标指针"><a href="#鼠标指针" class="headerlink" title="鼠标指针"></a>鼠标指针</h3><p><img src="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/8b8d7c0c1f0793c36590dc5f12f676a8.png" alt="效果图"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>bynotes<span class="hljs-regexp">/texiao/</span>source<span class="hljs-regexp">/css/</span>shubiao.css<span class="hljs-comment"># 鼠标指针</span><br></code></pre></td></tr></table></figure><h2 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h2><p><img src="/2021/04/23/%E7%BE%8E%E5%8C%96fulid%E4%B8%BB%E9%A2%98/image-20210423230905281.png" alt="image-20210423230905281"></p><p>想拥有一只这样的动态小猫吗？或者像我一样很想养猫但苦于时候未到只能云养猫。（或者想要其他模型来陪伴你的博客，比如美少女。）</p><p>那么首先在hexo根目录下执行命令来安装模块。</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs delphi">npm install --save hexo-<span class="hljs-keyword">helper</span>-live2d<br><span class="hljs-comment">// 没有纸飞机的小伙伴建议在前面加个c，像这样，下面的下载模型也一样我就不再说了</span><br>cnpm install --save hexo-<span class="hljs-keyword">helper</span>-live2d<br></code></pre></td></tr></table></figure><p>然后下载模型。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> &#123;packagename&#125;<br></code></pre></td></tr></table></figure><p><a href="https://huaji8.top/post/live2d-plugin-2.0/">模型预览</a></p><p>packagename 如下：</p><ul><li>live2d-widget-model-chitose</li><li>live2d-widget-model-epsilon2_1</li><li>live2d-widget-model-gf</li><li>live2d-widget-model-haru/01</li><li>live2d-widget-model-haru/02</li><li>live2d-widget-model-haruto</li><li>live2d-widget-model-hibiki</li><li>live2d-widget-model-hijiki</li><li>live2d-widget-model-izumi</li><li>live2d-widget-model-koharu</li><li>live2d-widget-model-miku</li><li>live2d-widget-model-ni-j</li><li>live2d-widget-model-nico</li><li>live2d-widget-model-nietzsche</li><li>live2d-widget-model-nipsilon</li><li>live2d-widget-model-nito</li><li>live2d-widget-model-shizuku</li><li>live2d-widget-model-tororo</li><li>live2d-widget-model-tsumiki</li><li>live2d-widget-model-unitychan</li><li>live2d-widget-model-wanko</li><li>live2d-widget-model-z16</li></ul><p>比如我的小白猫用的就是如下指令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">npm</span> install live<span class="hljs-number">2</span>d-widget-model-tororo<br></code></pre></td></tr></table></figure><p>下面我们进行相关配置，也是遵循<a href="https://github.com/EYHN/hexo-helper-live2d">live2d官方文档</a>里的教程。</p><p>官方文档说在fluid主题下的config.yml文件或hexo下的config.yml文件进行修改都可以，我自己操作的话是发现我这边只有在hexo下的config文件进行修改不出错。</p><p>在config.yml文件的最后加入以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">live2d:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># enable: false</span><br>  <span class="hljs-attr">pluginRootPath:</span> <span class="hljs-string">live2dw/</span> <span class="hljs-comment"># Root path of plugin to be on the site (Relative)</span><br>  <span class="hljs-attr">pluginJsPath:</span> <span class="hljs-string">lib/</span> <span class="hljs-comment"># JavaScript path related to plugin&#x27;s root (Relative)</span><br>  <span class="hljs-attr">pluginModelPath:</span> <span class="hljs-string">assets/</span> <span class="hljs-comment"># Relative model path related to plugin&#x27;s root (Relative)</span><br>  <span class="hljs-attr">scriptFrom:</span> <span class="hljs-string">local</span> <span class="hljs-comment"># Default</span><br>  <span class="hljs-comment"># scriptFrom: jsdelivr # jsdelivr CDN</span><br>  <span class="hljs-comment"># scriptFrom: unpkg # unpkg CDN</span><br>  <span class="hljs-comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # Your custom url</span><br>  <span class="hljs-attr">tagMode:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Whether only to replace live2d tag instead of inject to all pages</span><br>  <span class="hljs-attr">log:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Whether to show logs in console</span><br>  <span class="hljs-attr">model:</span><br>    <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-tororo</span> <span class="hljs-comment"># 模型名字 npm-module package name</span><br></code></pre></td></tr></table></figure><p>具体参数可以自行调整，甚至你可以diy修改模型。方法是找到模型的目录，可以直接搜索模型名 tororo ，找到里面 texture_00.png 的图片，利用PS软件或其他方式对图片文件进行修改，创造独属于你的模型。</p><p>我找到我模型的位置是在/Users/lxt/blog/node_modules/live2d-widget-model-tororo/assets/moc/tororo.2048，仅供参考。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>花里胡哨</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用脚本便利生活——关于brew和hexo</title>
    <link href="/2021/04/21/%E7%94%A8%E8%84%9A%E6%9C%AC%E4%BE%BF%E5%88%A9%E7%94%9F%E6%B4%BB%E2%80%94%E2%80%94%E6%B8%85%E9%99%A4brew%E7%BC%93%E5%AD%98%E5%92%8C%E4%B8%80%E5%8F%A5%E6%8C%87%E4%BB%A4%E4%B8%8A%E4%BC%A0%E5%8D%9A%E6%96%87/"/>
    <url>/2021/04/21/%E7%94%A8%E8%84%9A%E6%9C%AC%E4%BE%BF%E5%88%A9%E7%94%9F%E6%B4%BB%E2%80%94%E2%80%94%E6%B8%85%E9%99%A4brew%E7%BC%93%E5%AD%98%E5%92%8C%E4%B8%80%E5%8F%A5%E6%8C%87%E4%BB%A4%E4%B8%8A%E4%BC%A0%E5%8D%9A%E6%96%87/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>把我们的口号打在公屏上：用脚本便利生活！懒人就要生活越简单越好！</p><p>致谢：我的老朋友Hoohoo！</p><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>众所周知，Homebrew的缓存很难清理：</p><ul><li>清理软件难以把它清理干净</li><li>brew cleanup 只能清理120天前的缓存</li></ul><p>这里贴上少数派的教程，让我学会了通过脚本清理Homebrew缓存。</p><p>参考：<a href="https://sspai.com/post/65842">从零开始，编写一个 HomeBrew 缓存清理脚本 - 少数派</a></p><hr><p>再次众所周知，我们利用hexo实现本地预览和上传需要几句指令。</p><p>本地预览：<kbd>hexo clean</kbd>和<kbd>hexo s</kbd></p><p>上传：<kbd>hexo clean</kbd> 紧接着<kbd>hexo g</kbd>再然后<kbd>hexo d</kbd></p><p>贴上Hoohoo写的教程，帮助一句指令实现博文本地预览/上传～</p><p><a href="http://hellohoohoo.com/2021/04/14/%E4%B8%80%E6%9C%88%E4%B8%80%E6%97%A5/2021-04/#more">Hoohoo：写两个脚本帮你一键实现博客本地预览和上传</a></p><hr><p>以后有什么再添加进来～</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>便利生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用oh my zsh &amp; powerlevel10k打造个性化舒适终端</title>
    <link href="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/"/>
    <url>/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>工欲善其事，必先利其器。学生时代，一拿到书就先包上漂亮的书皮，准备学习前先拿出一堆自己觉得可能用的笔的往往是学习一般的学生；而将这个习惯延续至现在就演变成为，好好提升技术和钻研科研之前先把各种工具整的好看且舒适。（功能方面，主要实现了代码高亮和代码补全）</p><span id="more"></span><p>先上预览图：</p><p><img src="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/image-20210419234840397.png" alt="terminal效果图"></p><p><img src="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/image-20210419234548494.png" alt="iterm2效果图"></p><p>前情提要：</p><ul><li>terminal本身就可以在偏好设置里修改主题、字体、光标等，我之前选择的是homebrew；</li><li><p>默认可以科学上网；</p></li><li><p>下面的所有操作首先先默认已经安装好了git；</p></li><li>iterm2可以安装也可以不安装，下面会展开讲。</li></ul><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh my zsh"></a>安装oh my zsh</h1><p>首先需要切换成zsh：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chsh -s <span class="hljs-regexp">/bin/</span>zsh<br></code></pre></td></tr></table></figure><p>当然，以后如果需要的话也可以切换回bash：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chsh -s <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><p>安装方式有两种，可以使用curl或wget。</p><ul><li>curl安装方式：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><ul><li>wget安装方式：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>另外附上<a href="https://github.com/ohmyzsh/ohmyzsh">oh-my-zsh开源地址</a></p><h1 id="安装命令补全插件"><a href="#安装命令补全插件" class="headerlink" title="安装命令补全插件"></a>安装命令补全插件</h1><p>这是oh my zsh的一个插件，执行脚本安装。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd ~<span class="hljs-regexp">/.oh-my-zsh/</span>custom<span class="hljs-regexp">/plugins/</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions<br></code></pre></td></tr></table></figure><p>这时我们再次打开zshrc文件进行编辑。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">vi ~<span class="hljs-string">/.zshrc</span><br></code></pre></td></tr></table></figure><p>找到plugins，此时plugins中应该已经有了git，我们需要把代码补全zsh-autosuggestions也加上：</p><p><img src="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/image-20210420192318838.png" alt="image-20210420192318838"></p><p>加好后执行命令使修改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure><p>另外附上<a href="[https://github.com/sirius1024...](https://github.com/sirius1024/iterm2-with-oh-my-zsh">代码补全插件的开源地址</a>)</p><h1 id="安装代码高亮插件"><a href="#安装代码高亮插件" class="headerlink" title="安装代码高亮插件"></a>安装代码高亮插件</h1><p><del>我们的口令是：代码可以不写，高亮得先整好！</del></p><p>和上面代码补全插件一样的安装方式，执行脚本安装，而后打开zshrc文件进行编辑。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd ~<span class="hljs-regexp">/.oh-my-zsh/</span>custom<span class="hljs-regexp">/plugins/</span><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/zsh-users/</span>zsh-autosuggestions<br>vi ~/.zshrc<br></code></pre></td></tr></table></figure><p>找到plugins，此时plugins中应该已经有了git，我们需要把代码高亮zsh-syntax-hignlighting也加上。</p><p><strong>注意：代码高亮插件一定要是在最后一行。</strong></p><p><img src="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/image-20210420193412909.png" alt="image-20210420193412909"></p><h1 id="安装喜欢的主题"><a href="#安装喜欢的主题" class="headerlink" title="安装喜欢的主题"></a>安装喜欢的主题</h1><p>其实完成到这里，已经可以更好地使用terminal了！但是如果想要让你的终端更好看的话，可以安装喜欢的主题和字体～</p><h2 id="安装agnoster主题"><a href="#安装agnoster主题" class="headerlink" title="安装agnoster主题"></a>安装agnoster主题</h2><p>agnoster主题的效果图如下：</p><p><img src="/2021/04/19/%E7%94%A8oh-my-zsh-powerlevel10k%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/image-20210425201457996.png" alt="agnoster主题"></p><p>为了正确显示以上效果，需要安装powerline和power fonts。</p><h3 id="安装powerline"><a href="#安装powerline" class="headerlink" title="安装powerline"></a>安装powerline</h3><blockquote><p>Powerline使用几种特殊的字形来获得箭头效果，并为开发人员提供一些自定义符号。这需要在系统中安装符号字体或修补字体。使用过的应用程序（例如终端仿真器）也必须配置为使用修补字体。</p><p><a href="http://powerline.readthedocs.io/en/latest/installation.html">Powerline官网</a></p></blockquote><p>安装powerline的指令：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">pip install powerline-<span class="hljs-built_in">status</span> <span class="hljs-comment">--user</span><br></code></pre></td></tr></table></figure><h3 id="安装Power-Fonts"><a href="#安装Power-Fonts" class="headerlink" title="安装Power Fonts"></a>安装Power Fonts</h3><p>将项目git clone至本地，然后执行源码中的install.sh来安装字体库。</p><p>首先在你习惯的位置新建一个文件夹，如：~/opensource/</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># clone</span><br>git clone https:<span class="hljs-string">//github.com/powerline/fonts.git</span> <span class="hljs-params">--depth=1</span><br><span class="hljs-comment"># install</span><br><span class="hljs-keyword">cd</span> fonts<br><span class="hljs-string">./install.sh</span><br><span class="hljs-comment"># clean-up a bit</span><br><span class="hljs-keyword">cd</span> <span class="hljs-string">..</span><br>rm -rf fonts<br></code></pre></td></tr></table></figure><p>安装好字体库之后，我们来设置terminal的字体，具体的操作是终端 -&gt; 偏好设置 -&gt; 描述文件 -&gt; 文本 -&gt; 字体。找到Meslo LG字体。有L、M、S可选。</p><p>备注：如果是iterm2则为：iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text，在Font区域选中Change Font，然后更换字体。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>花里胡哨</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello LXT</title>
    <link href="/2021/04/14/hello-world/"/>
    <url>/2021/04/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>大家好！</p><p>今天是2021年4月14日凌晨。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
